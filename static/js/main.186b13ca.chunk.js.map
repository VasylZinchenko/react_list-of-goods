{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","reverse","setState","handleSortAlphabetically","ALPHABET","handleSortByLength","LENGTH","handleReset","this","reorderedGoods","goods","visibleGoods","sort","firstGood","nextGood","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAb,4MACEC,MAAuB,CACrBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBARzB,EAYEG,yBAA2B,WACzB,EAAKD,SAAS,CACZJ,SAAUJ,EAASU,YAdzB,EAkBEC,mBAAqB,WACnB,EAAKH,SAAS,CACZJ,SAAUJ,EAASY,UApBzB,EAwBEC,YAAc,WACZ,EAAKL,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KA3BlB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAEZS,EA5DH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENW,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQhB,GACN,KAAKJ,EAASU,SACZ,OAAOS,EAAUE,cAAcD,GAEjC,KAAKpB,EAASY,OACZ,OAAOO,EAAUG,OAASF,EAASE,OAErC,QACE,OAAO,MAIThB,GACFW,EAAaV,UAGRU,EAqCkBM,CACrBtB,EACA,CAAEG,WAAUE,eAGd,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYtB,IAAaJ,EAASU,WAGtCiB,QAASb,KAAKL,yBARhB,iCAaA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYtB,IAAaJ,EAASY,SAGtCe,QAASb,KAAKH,mBARhB,4BAaA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAA2B,IAAfpB,IAGhBqB,QAASb,KAAKP,QARhB,sBAaED,GAAcF,IAAaJ,EAASK,OACpC,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKD,YAHhB,sBAUJ,6BACE,6BACGE,EACEa,KAAI,SAACC,GACJ,OACE,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBAjG3B,GAAyBC,IAAMC,WCrD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.186b13ca.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, nextGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstGood.localeCompare(nextGood);\n\n      case SortType.LENGTH:\n        return firstGood.length - nextGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state:ReorderOptions = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleSortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleSortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const reorderedGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.handleSortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': isReversed === false,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {reorderedGoods\n              .map((good) => {\n                return (\n                  <li key={good} data-cy=\"Good\">{good}</li>\n                );\n              })}\n\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}